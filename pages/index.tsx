/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/ZiJC68IRrdF
*/
import { Label } from '@/components/ui/label'
import { Input } from '@/components/ui/input'
import { Button } from '@/components/ui/button'
import Image from 'next/image'
import Link from 'next/link'
import { Badge } from '@/components/ui/badge'
import {
  SelectValue,
  SelectTrigger,
  SelectItem,
  SelectGroup,
  SelectContent,
  Select,
} from '@/components/ui/select'
import { createI18N, useTranslation } from '@/i18n'
import { useState } from 'react'

const i18n = createI18N({
  resources: {
    ja: {
      translation: {
        login: "ログイン",
        continue: "続行するには、アカウントにログインしてください。",
        email: "E メール",
        password: "パスワード",
        forgot: "パスワードをお忘れですか？ ",
        register: "アカウントをお持ちでないですか？",
        language: "言語",
        lng: "日本語",
        change: "言語を変更する",
      }
    },
    english: {
      translation: {
        login: "LOGIN",
        continue: "Log in to your account to continue.",
        email: "E-mail",
        password: "Password",
        forgot: "Forgot your password? ",
        register: "Do not have an account?",
        language: "Language",
        lng: "English",
        change: "Change language",
      }
    },
    spanish: {
      translation: {
        login: "INICIAR SESIÓN",
        continue: "Inicie sesión en su cuenta para continuar.",
        email: "Correo electrónico",
        password: "Contraseña",
        forgot: "¿Olvidaste tu contraseña? ",
        register: "¿No tienes una cuenta?",
        language: "Idioma",
        lng: "Español",
        change: "Cambiar idioma",
      },
    },
    french: {
      translation: {
        login: "CONNEXION",
        continue: "Connectez-vous à votre compte pour continuer.",
        email: "E-mail",
        password: "Mot de passe",
        forgot: "Mot de passe oublié? ",
        register: "Vous n'avez pas de compte?",
        language: "Langue",
        lng: "Français",
        change: "Changer de langue",
      }
    },
    german: {
      translation: {
        login: "ANMELDUNG",
        continue: "Melden Sie sich mit Ihrem Konto an, um fortzufahren.",
        email: "E-Mail",
        password: "Passwort",
        forgot: "Passwort vergessen? ",
        register: "Sie haben noch keinen Account?",
        language: "Sprache",
        lng: "Deutsch",
        change: "Sprache ändern",
      }
    },
    italian: {
      translation: {
        login: "ACCESSO",
        continue: "Accedi al tuo account per continuare.",
        email: "E-mail",
        password: "Parola d'ordine",
        forgot: "Ha dimenticato la password? ",
        register: "Non hai un account?",
        language: "Lingua",
        lng: "Italiano",
        change: "Cambia lingua",
      }
    }
  }
})

const Home = () => {
  const { t, lng, change } = useTranslation(i18n);
  const [showPassword, setShowPassword] = useState(false);
  const togglePasswordVisibility = () => setShowPassword(!showPassword);

  return ( // prettier-ignore
    <section className="w-full h-screen bg-gray-100 dark:bg-gray-900 flex items-center justify-center p-10 lg:p-0">
      <div className="bg-white max-w-md mx-auto rounded-xl shadow-md overflow-hidden md:max-w-2xl dark:bg-gray-800">
        <div className={lng ? "md:flex" : "hidden"}>
          <div className="md:flex-shrink-0">
            <Image
              alt="Login Image"
              className="h-48 w-full object-cover md:w-48 md:h-full md:rounded-none rounded-t-xl"
              height="299"
              src="/placeholder.svg"
              style={{
                aspectRatio: "448/299",
                objectFit: "cover",
              }}
              width="448"
              priority
            />
          </div>
          <div className="p-8">
            <div className="text-xl font-bold text-gray-800 dark:text-gray-200 mb-4">{t("login")}</div>
            <p className="mt-2 text-gray-500 dark:text-gray-400">{t("continue")}</p>
            <div className="space-y-4">
              <div className="space-y-2">
                <Label htmlFor="email">{t("email")}</Label>
                <Input id="email" placeholder="m@example.com" required type="email" className="bg-white dark:bg-gray-700 text-gray-900 dark:text-white" />
              </div>
              <div className="space-y-2 relative">
                <Label htmlFor="password">{t("password")}</Label>
                <Input id="password" required type={showPassword ? "text" : "password"} className="bg-white dark:bg-gray-700 text-gray-900 dark:text-white"/> <div className="relative">
                <button onClick={togglePasswordVisibility} className="absolute right-0 bottom-0 -translate-y-4 pr-3" type="button">
                  <IconEyeOpen className="text-gray-500 hover:text-gray-900 dark:text-white dark:hover:text-gray-200" />
                </button>
              </div>
              </div>
              <Button className="w-full dark:bg-blue-800 dark:text-blue-100" type="submit">
                {t("login")}
              </Button>
            </div>
            <div className="mt-6 flex justify-between">
              <Link
                className="inline-block text-sm text-gray-600 hover:text-gray-900 dark:text-white dark:hover:text-gray-200"
                href="#"
              >
                {t("forgot")}
              </Link>
              <Link
                className="inline-block text-sm text-gray-600 hover:text-gray-900 dark:text-white dark:hover:text-gray-200"
                href="#"
              >
                {t("register")}
              </Link>
            </div>
            <div className="mt-6">
              <Badge className="inline-block bg-blue-100 text-blue-800 px-2 py-1 text-xs font-semibold tracking-wider rounded-full dark:bg-blue-800 dark:text-blue-100">
                {t("language")}: {t("lng")}
              </Badge>
              <Select onValueChange={change}>
                <SelectTrigger className="mt-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white">
                  <SelectValue placeholder={t("change")} />
                </SelectTrigger>
                <SelectContent className="bg-white dark:bg-gray-700 text-gray-900 dark:text-white">
                  <SelectGroup>
                    <SelectItem value="ja">日本語</SelectItem>
                    <SelectItem value="english">English</SelectItem>
                    <SelectItem value="spanish">Español</SelectItem>
                    <SelectItem value="french">Français</SelectItem>
                    <SelectItem value="german">Deutsch</SelectItem>
                    <SelectItem value="italian">Italiano</SelectItem>
                  </SelectGroup>
                </SelectContent>
              </Select>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}

function IconEyeOpen(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z" />
      <circle cx="12" cy="12" r="3" />
    </svg>
  )
}

export default Home;